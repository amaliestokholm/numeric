Check part A.1
Given the matrix A with dimensions 5x3, where A in this run is
[[ 0.83547769  0.7385526   0.73036463]
 [ 0.51314316  0.59583824  0.76731796]
 [ 0.8569558   0.48735011  0.17866017]
 [ 0.82293326  0.36379651  0.52294642]
 [ 0.83788138  0.51518626  0.12606436]]
The first test is whether qr_qs_decomp can decompose the matrix A into Q and R
After the run of qr_qs_decomp, Q is 
[[ 0.4764463   0.46915931  0.04560516]
 [ 0.29262919  0.6678686   0.27284807]
 [ 0.48869458 -0.24013196 -0.34545496]
 [ 0.46929261 -0.50880561  0.70610648]
 [ 0.47781705 -0.13150884 -0.55276452]]
We check if Q is orthogonal by checking whether Q^T Q = I
Q^T * Q =
 [[ 0.4764463   0.29262919  0.48869458  0.46929261  0.47781705]
 [ 0.46915931  0.6678686  -0.24013196 -0.50880561 -0.13150884]
 [ 0.04560516  0.27284807 -0.34545496  0.70610648 -0.55276452]]*
[[ 0.4764463   0.46915931  0.04560516]
 [ 0.29262919  0.6678686   0.27284807]
 [ 0.48869458 -0.24013196 -0.34545496]
 [ 0.46929261 -0.50880561  0.70610648]
 [ 0.47781705 -0.13150884 -0.55276452]] 
= [[  1.00000000e+00  -7.35522754e-16   6.66133815e-16]
 [ -7.35522754e-16   1.00000000e+00  -1.52655666e-16]
 [  6.66133815e-16  -1.52655666e-16   1.00000000e+00]]
Due to numerical errors, the off-diagonal elements are probably not exactly 0, but close
We check if R is upper triangular:
[[ 1.75356108  1.18129747  0.96548001]
 [ 0.          0.37455889  0.52956627]
 [ 0.          0.          0.48052252]]
We check if the product QR is equal to A:
Q * R 
= [[ 0.4764463   0.46915931  0.04560516]
 [ 0.29262919  0.6678686   0.27284807]
 [ 0.48869458 -0.24013196 -0.34545496]
 [ 0.46929261 -0.50880561  0.70610648]
 [ 0.47781705 -0.13150884 -0.55276452]]*
[[ 1.75356108  1.18129747  0.96548001]
 [ 0.          0.37455889  0.52956627]
 [ 0.          0.          0.48052252]] 
= [[ 0.83547769  0.7385526   0.73036463]
 [ 0.51314316  0.59583824  0.76731796]
 [ 0.8569558   0.48735011  0.17866017]
 [ 0.82293326  0.36379651  0.52294642]
 [ 0.83788138  0.51518626  0.12606436]],
Are QR equal to A within a tolerance of 1e-16? 
True

Check part A.2
Given the square matrix A with dimensions 4x4, where A in this run is
[[ 0.5679388   0.72417822  0.67738345  0.13119912]
 [ 0.2155554   0.59867353  0.44945183  0.09810933]
 [ 0.29505783  0.21056079  0.72978428  0.65341084]
 [ 0.5558804   0.27514154  0.57480985  0.43560167]]
and given a random vector b of size 4, which in this run is
[ 0.9290193   0.41332412  0.08532867  0.58084449]
Using qr_gs_decomp on A and then using back-substitution, yields the solution x=
[ 1.3416707   0.18305093  0.19697527 -0.75424917]
Is Ax = b within a tolerance of 1e-16?
 True
